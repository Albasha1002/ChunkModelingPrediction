# -*- coding: utf-8 -*-
"""ChunkModelling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UBlNP3JLT6HhPreBH0PivILFQlhJ7Crf
"""

import pandas as pd
import numpy as np



df=pd.read_csv('/content/Churn_Modelling.csv')

df.head()

df.info()

df.duplicated().sum()

df['Exited'].value_counts()

df['Geography'].value_counts()

df.drop(columns=['RowNumber','CustomerId','Surname'],inplace=True)

df.head()

df=pd.get_dummies(df,columns=['Geography', 'Gender'],drop_first=True)

X=df.drop(columns=['Exited'])
y=df['Exited']
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.2,random_state=1)

X_train.shape

from sklearn.preprocessing import StandardScaler
scaler =StandardScaler()

X_train_scaled=scaler.fit_transform(X_train)
X_test_scaled=scaler.transform(X_test)

X_train_scaled

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense

model=Sequential()
model.add(Dense(11,activation='relu',input_dim=11))
model.add(Dense(11,activation='relu'))
model.add(Dense(1,activation="relu"))

model.summary()

model.compile(loss="binary_crossentropy", optimizer="Adam")
histroy=model.fit(X_train_scaled,y_train,epochs=100,validation_split=0.2,)

model.layers[0].get_weights()

y_log=model.predict(X_test_scaled)

y_pred=np.where(y_log>0.5,1,0)

from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred)

import matplotlib.pyplot as plt

histroy.history

plt.plot(histroy.history['accuracy'])
plt.plot(histroy.history['val_accuracy'])

